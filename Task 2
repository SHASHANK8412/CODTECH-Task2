/* The To-Do List app allows users to create, manage, and organize tasks efficiently. Users can add, edit, and delete tasks, 
enabling them to stay organized and prioritize their daily activities effectively.*/

package com.example.to_do;

import android.content.Context;
import android.content.SharedPreferences;
import android.os.Bundle;
import android.view.View;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ListView;
import android.widget.Toast;
import androidx.appcompat.app.AppCompatActivity;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class MainActivity extends AppCompatActivity {

    private EditText editTextTask;
    private Button buttonAddTask;
    private ListView listViewTasks;

    private ArrayAdapter<String> adapter;
    private List<String> taskList;

    private static final String PREFS_NAME = "ToDoListPrefs";
    private static final String TASKS_KEY = "tasks";

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main1 );

        editTextTask = findViewById(R.id.editTextTask);
        buttonAddTask = findViewById(R.id.buttonAddTask);
        listViewTasks = findViewById(R.id.listViewTasks);

        // Initialize task list and adapter
        taskList = new ArrayList<>();
        loadTasks();
        adapter = new ArrayAdapter<>(this, android.R.layout.simple_list_item_1, taskList);
        listViewTasks.setAdapter(adapter);

        buttonAddTask.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                String task = editTextTask.getText().toString().trim();
                if (!task.isEmpty()) {
                    addTask(task);
                } else {
                    Toast.makeText(MainActivity.this, "Please enter a task", Toast.LENGTH_SHORT).show();
                }
            }
        });
    }

    private void addTask(String task) {
        taskList.add(task);
        adapter.notifyDataSetChanged();
        editTextTask.setText("");
        saveTasks();
    }

    private void loadTasks() {
        SharedPreferences sharedPreferences = getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE);
        String savedTasks = sharedPreferences.getString(TASKS_KEY, null);

        if (savedTasks != null) {
            String[] tasksArray = savedTasks.split(",");
            taskList.addAll(Arrays.asList(tasksArray));
        }
    }

    private void saveTasks() {
        SharedPreferences sharedPreferences = getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE);
        SharedPreferences.Editor editor = sharedPreferences.edit();
        StringBuilder stringBuilder = new StringBuilder();

        for (String task : taskList) {
            stringBuilder.append(task).append(",");
        }

        if (stringBuilder.length() > 0) {
            stringBuilder.deleteCharAt(stringBuilder.length() - 1);
        }

        editor.putString(TASKS_KEY, stringBuilder.toString());
        editor.apply();
    }
}
